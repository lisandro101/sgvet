package sgvet.igu;

import java.awt.Component;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import sgvet.entidades.Demanda;
import sgvet.entidades.ProductoComponente;
import sgvet.entidades.ProductoTerminado;
import sgvet.gestores.GestorDemanda;
import sgvet.igu.buscar.PanelBuscarProductoGral;
import sgvet.igu.model.DemandaTableModel;
import sgvet.utils.*;

/**
 *
 * @author  Franco Catena, Mario Mariani, Lisandro Nieto, Sebastián Torres
 */
public class PanelDemanda extends javax.swing.JDialog implements IValidable {
    private static final long serialVersionUID = 1L;

    private DemandaTableModel tmBuscar;
    private ProductoComponente productoTerminado;
    List<Demanda> demandas;

    public enum Error {
        ERROR_MEDIO ("error medio"),
        ERROR_MEDIO_ABSOLUTO ("error medio absoluto"),
        ERROR_CUADRADO_MEDIO ("error cuadrado medio"),
        ERROR_PORCENTUAL_MEDIO ("error porcentual medio");


        private String nombre;

        private Error(String nombre) {
            this.nombre = nombre;
        }

        @Override
        public String toString() {
            return nombre;
        }
    }

    private Error error;




    /** Creates new form PanelCargoEmpleado */
    public PanelDemanda() {
        initComponents();
        inicializar();
        inicializarBotones();
        inicializarPaneles();
    }

    private void inicializar() {
        tmBuscar = new DemandaTableModel(0);
        tCargos.setModel(tmBuscar);
        
    }

    private void inicializarBotones(){
        btCalcular.setEnabled(false);
        dpPeriodoFinal.setEnabled(false);
        dpPeriodoInicial.setEnabled(false);
        btCargarPeriodos.setEnabled(false);
    }

    private void inicializarPaneles(){
        PanelDemandaSES paneldemanda = new PanelDemandaSES();
        
        this.add(paneldemanda);
        paneldemanda.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        errores = new javax.swing.ButtonGroup();
        pTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tCargos = new org.jdesktop.swingx.JXTable();
        dpPeriodoInicial = new org.jdesktop.swingx.JXDatePicker();
        dpPeriodoFinal = new org.jdesktop.swingx.JXDatePicker();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btCargarPeriodos = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        rbMedio = new javax.swing.JRadioButton();
        rbMedioAbsoluto = new javax.swing.JRadioButton();
        rbCuadradoMedio = new javax.swing.JRadioButton();
        rbPorcentualMedioAbsoluto = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        tfconstanteAlfa = new javax.swing.JTextField();
        pPrediccionDemanda = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfPM = new javax.swing.JTextField();
        tfPMP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfPMSE = new javax.swing.JTextField();
        tfErrorPM = new javax.swing.JTextField();
        tfErrorPMP = new javax.swing.JTextField();
        tfErrorPMSE = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfDemandaReal = new javax.swing.JTextField();
        pBotones = new javax.swing.JPanel();
        btCalcular = new javax.swing.JButton();
        btCerrar = new javax.swing.JButton();
        btLimpiar = new javax.swing.JButton();
        pProducto = new javax.swing.JPanel();
        pProductoTerminado = new javax.swing.JPanel();
        lbCodigo = new javax.swing.JLabel();
        lbNombre = new javax.swing.JLabel();
        tfCodigo = new javax.swing.JTextField();
        tfNombre = new javax.swing.JTextField();
        btBuscarProdTerminado = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Demanda");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        pTabla.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tCargos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Periodo", "Demanda Real", "Ponderación PMP", "PMSE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tCargos);

        dpPeriodoInicial.setFormats("MMMM yyyy");
        dpPeriodoInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpPeriodoInicialActionPerformed(evt);
            }
        });

        dpPeriodoFinal.setFormats("MMMM yyyy");
        dpPeriodoFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpPeriodoFinalActionPerformed(evt);
            }
        });

        jLabel1.setText("Periodo inicial");

        jLabel2.setText("Periodo final");

        btCargarPeriodos.setText("Cargar Periodos");
        btCargarPeriodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCargarPeriodosActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Error"));

        errores.add(rbMedio);
        rbMedio.setSelected(true);
        rbMedio.setText("Medio");
        rbMedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMedioActionPerformed(evt);
            }
        });
        jPanel1.add(rbMedio);

        errores.add(rbMedioAbsoluto);
        rbMedioAbsoluto.setText("Medio Absoluto");
        jPanel1.add(rbMedioAbsoluto);

        errores.add(rbCuadradoMedio);
        rbCuadradoMedio.setText("Cuadrado Medio");
        rbCuadradoMedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCuadradoMedioActionPerformed(evt);
            }
        });
        jPanel1.add(rbCuadradoMedio);

        errores.add(rbPorcentualMedioAbsoluto);
        rbPorcentualMedioAbsoluto.setText("Porcentual Medio Absoluto");
        jPanel1.add(rbPorcentualMedioAbsoluto);

        jLabel6.setText("Constante de suavizado");

        pPrediccionDemanda.setBorder(javax.swing.BorderFactory.createTitledBorder("Predicción Demanda"));

        jLabel3.setText("PM");

        tfPM.setEditable(false);

        tfPMP.setEditable(false);

        jLabel4.setText("PMP");

        jLabel5.setText("PMSE");

        tfPMSE.setEditable(false);
        tfPMSE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPMSEActionPerformed(evt);
            }
        });

        tfErrorPM.setEditable(false);

        tfErrorPMP.setEditable(false);

        tfErrorPMSE.setEditable(false);

        jLabel7.setText("Demanda Real");

        javax.swing.GroupLayout pPrediccionDemandaLayout = new javax.swing.GroupLayout(pPrediccionDemanda);
        pPrediccionDemanda.setLayout(pPrediccionDemandaLayout);
        pPrediccionDemandaLayout.setHorizontalGroup(
            pPrediccionDemandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPrediccionDemandaLayout.createSequentialGroup()
                .addGroup(pPrediccionDemandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pPrediccionDemandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfPMSE, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPMP, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPM, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pPrediccionDemandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfErrorPM, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                    .addComponent(tfErrorPMP, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                    .addComponent(tfErrorPMSE, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDemandaReal, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(281, 281, 281))
        );
        pPrediccionDemandaLayout.setVerticalGroup(
            pPrediccionDemandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pPrediccionDemandaLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(pPrediccionDemandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfErrorPM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(tfDemandaReal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pPrediccionDemandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfPMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfErrorPMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pPrediccionDemandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfPMSE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfErrorPMSE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout pTablaLayout = new javax.swing.GroupLayout(pTabla);
        pTabla.setLayout(pTablaLayout);
        pTablaLayout.setHorizontalGroup(
            pTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
            .addGroup(pTablaLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(pTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dpPeriodoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(34, 34, 34)
                .addGroup(pTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(pTablaLayout.createSequentialGroup()
                        .addComponent(dpPeriodoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(btCargarPeriodos)))
                .addContainerGap(128, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
            .addGroup(pTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfconstanteAlfa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(423, Short.MAX_VALUE))
            .addComponent(pPrediccionDemanda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pTablaLayout.setVerticalGroup(
            pTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTablaLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(pTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(8, 8, 8)
                .addGroup(pTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(dpPeriodoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dpPeriodoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCargarPeriodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfconstanteAlfa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pPrediccionDemanda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btCalcular.setText("Calcular");
        btCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCalcularActionPerformed(evt);
            }
        });
        pBotones.add(btCalcular);

        btCerrar.setText("Cerrar");
        btCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCerrarActionPerformed(evt);
            }
        });
        pBotones.add(btCerrar);

        btLimpiar.setText("Limpiar");
        btLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimpiarActionPerformed(evt);
            }
        });
        pBotones.add(btLimpiar);

        pProductoTerminado.setBorder(javax.swing.BorderFactory.createTitledBorder("Producto Terminado"));

        lbCodigo.setText("Código:");

        lbNombre.setText("Nombre:");

        tfCodigo.setEnabled(false);

        tfNombre.setEnabled(false);

        btBuscarProdTerminado.setText("Buscar");
        btBuscarProdTerminado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarProdTerminadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pProductoTerminadoLayout = new javax.swing.GroupLayout(pProductoTerminado);
        pProductoTerminado.setLayout(pProductoTerminadoLayout);
        pProductoTerminadoLayout.setHorizontalGroup(
            pProductoTerminadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pProductoTerminadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pProductoTerminadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbCodigo)
                    .addComponent(lbNombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pProductoTerminadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(tfNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                    .addGroup(pProductoTerminadoLayout.createSequentialGroup()
                        .addComponent(tfCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btBuscarProdTerminado)))
                .addContainerGap())
        );
        pProductoTerminadoLayout.setVerticalGroup(
            pProductoTerminadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pProductoTerminadoLayout.createSequentialGroup()
                .addGroup(pProductoTerminadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbCodigo)
                    .addComponent(btBuscarProdTerminado)
                    .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pProductoTerminadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNombre)
                    .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pProductoLayout = new javax.swing.GroupLayout(pProducto);
        pProducto.setLayout(pProductoLayout);
        pProductoLayout.setHorizontalGroup(
            pProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pProductoTerminado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pProductoLayout.setVerticalGroup(
            pProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pProductoTerminado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pBotones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(pTabla, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCerrarActionPerformed
    dispose();
}//GEN-LAST:event_btCerrarActionPerformed

private void btCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCalcularActionPerformed
    if (tfconstanteAlfa.getText().trim().equals("") ) {
        JOptionPane.showMessageDialog(this, "Debe ingresar constante de suavizado");
    } else {
        
        if (tfDemandaReal.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe ingresar Demanda real del periodo a predecir");
        } else {
            
            setError();
            double alfa = Double.parseDouble(tfconstanteAlfa.getText());
            if (GestorDemanda.getInstancia().validarConstanteAlfa(alfa) && GestorDemanda.getInstancia().validarPonderaciones(demandas)) {
                tfPM.setText(String.valueOf(redondear(GestorDemanda.getInstancia().calcularPM(demandas))));
                tfPMP.setText(String.valueOf(redondear(GestorDemanda.getInstancia().calcularPMP(demandas))));
                tfPMSE.setText(String.valueOf(redondear(GestorDemanda.getInstancia().calcularPMSE(demandas, alfa))));
                tmBuscar.agregarFilas(demandas);

                Demanda demandaPredecida = new Demanda();

                demandaPredecida.setPM(Double.valueOf(tfPM.getText()));
                demandaPredecida.setPMP(Double.valueOf(tfPMP.getText()));
                demandaPredecida.setPMSE(Double.valueOf(tfPMSE.getText()));

                double[] errores1= GestorDemanda.getInstancia().calcularErrores(demandas,demandaPredecida, Double.valueOf(tfDemandaReal.getText()), error);
                tfErrorPM.setText(String.valueOf(redondear(errores1[0])));
                tfErrorPMP.setText(String.valueOf(redondear(errores1[1])));
                tfErrorPMSE.setText(String.valueOf(redondear(errores1[2])));
                
            } else {
                if (!GestorDemanda.getInstancia().validarConstanteAlfa(alfa)) {
                    JOptionPane.showMessageDialog(this, "La constante de suavizado esta fuera de rango [0-1]");
                } else if (!GestorDemanda.getInstancia().validarPonderaciones(demandas)) {
                    JOptionPane.showMessageDialog(this, "La sumatoria de las constantes de ponderación no es igual a 1");
                }
            }
            
            
        }
    }
}//GEN-LAST:event_btCalcularActionPerformed

private void btLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimpiarActionPerformed
 sgvet.utils.Util.getInstancia().limpiarCampos(this);
 productoTerminado=null;
 btCalcular.setEnabled(false);
}//GEN-LAST:event_btLimpiarActionPerformed

private void btCargarPeriodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCargarPeriodosActionPerformed



    demandas= new ArrayList<Demanda>();
    Demanda demanda;
    Calendar cal = Calendar.getInstance();
    Date fechaInicial = dpPeriodoInicial.getDate();
    Date fechaInicialRP = dpPeriodoInicial.getDate();
   // fechaInicialRP = convertirFecha(fechaInicialRP);
    Date fechaFinal = dpPeriodoFinal.getDate();

    if(fechaInicial != null & fechaFinal != null){
        fechaInicialRP = convertirFecha(fechaInicialRP);
        cal.setTime(fechaFinal);
        cal.add(Calendar.DAY_OF_MONTH, 30);
        Date fechaTemp = cal.getTime();
//        int temp=0;

        if(fechaInicial.compareTo(fechaTemp)>0){
            JOptionPane.showMessageDialog(this, "El periodo inicial es mayor que el periodo final");
        }else{
            
            do{
                demanda= new Demanda();
                fechaInicial = convertirFecha(fechaInicial);
                demanda.setPeriodo(fechaInicial);
                demandas.add(demanda);

                cal.setTime(fechaInicial);
                cal.add(Calendar.DAY_OF_MONTH, 30);
                fechaInicial= cal.getTime();


            }  while(fechaInicial.compareTo(fechaFinal)<=0);
            demanda= new Demanda();
            fechaFinal = convertirFecha(fechaFinal);

            if(!(fechaInicialRP.compareTo(fechaFinal)==0)){
                demanda.setPeriodo(fechaFinal);
                demandas.add(demanda);
            }

            tmBuscar.agregarFilas(demandas);
        }

    }
}//GEN-LAST:event_btCargarPeriodosActionPerformed

private void rbMedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMedioActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_rbMedioActionPerformed

private void rbCuadradoMedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCuadradoMedioActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_rbCuadradoMedioActionPerformed

private void tfPMSEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPMSEActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_tfPMSEActionPerformed

private void btBuscarProdTerminadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarProdTerminadoActionPerformed
    PanelBuscarProductoGral buscarProv = new PanelBuscarProductoGral(this);
    buscarProv.setModal(true);
    buscarProv.setVisible(true);
}//GEN-LAST:event_btBuscarProdTerminadoActionPerformed

private void dpPeriodoFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpPeriodoFinalActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_dpPeriodoFinalActionPerformed

private void dpPeriodoInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpPeriodoInicialActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_dpPeriodoInicialActionPerformed
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBuscarProdTerminado;
    private javax.swing.JButton btCalcular;
    private javax.swing.JButton btCargarPeriodos;
    private javax.swing.JButton btCerrar;
    private javax.swing.JButton btLimpiar;
    private org.jdesktop.swingx.JXDatePicker dpPeriodoFinal;
    private org.jdesktop.swingx.JXDatePicker dpPeriodoInicial;
    private javax.swing.ButtonGroup errores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCodigo;
    private javax.swing.JLabel lbNombre;
    private javax.swing.JPanel pBotones;
    private javax.swing.JPanel pPrediccionDemanda;
    private javax.swing.JPanel pProducto;
    private javax.swing.JPanel pProductoTerminado;
    private javax.swing.JPanel pTabla;
    private javax.swing.JRadioButton rbCuadradoMedio;
    private javax.swing.JRadioButton rbMedio;
    private javax.swing.JRadioButton rbMedioAbsoluto;
    private javax.swing.JRadioButton rbPorcentualMedioAbsoluto;
    private org.jdesktop.swingx.JXTable tCargos;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfDemandaReal;
    private javax.swing.JTextField tfErrorPM;
    private javax.swing.JTextField tfErrorPMP;
    private javax.swing.JTextField tfErrorPMSE;
    private javax.swing.JTextField tfNombre;
    private javax.swing.JTextField tfPM;
    private javax.swing.JTextField tfPMP;
    private javax.swing.JTextField tfPMSE;
    private javax.swing.JTextField tfconstanteAlfa;
    // End of variables declaration//GEN-END:variables

    @Override
    public List<Component> getComponentesObligatorios() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public ProductoComponente getProductoTerminado() {
        return productoTerminado;
    }

    public void setProductoTerminado(ProductoComponente producto) {
        this.productoTerminado = producto;
        cargarPantalla();
    }
    
    private void cargarPantalla(){
        sgvet.utils.Util.getInstancia().limpiarCampos(this);
        tfCodigo.setText(productoTerminado.getCodigo());
        tfNombre.setText(productoTerminado.getNombre());
        botonesPantallaCargada();
        
    }

    private void botonesPantallaCargada(){
        btCalcular.setEnabled(true);
        dpPeriodoFinal.setEnabled(true);
        dpPeriodoInicial.setEnabled(true);
        btCargarPeriodos.setEnabled(true);
    }

    private void setError(){
        if(rbMedio.isSelected()){
            error= Error.ERROR_MEDIO;
        }else if(rbMedioAbsoluto.isSelected()){
            error= Error.ERROR_MEDIO_ABSOLUTO;
        }else if(rbCuadradoMedio.isSelected()){
            error= Error.ERROR_CUADRADO_MEDIO;
        }else {
            error= Error.ERROR_PORCENTUAL_MEDIO;
        }
    }

    private Date convertirFecha(Date fecha){
//        int dia;
        Calendar cal = Calendar.getInstance();
        cal.setTime(fecha);
//        dia = (Calendar.DAY_OF_MONTH )-1;
        cal.add(Calendar.DAY_OF_MONTH, 1);

        return cal.getTime();
    }

    private double redondear(double valor){
        return (Math.floor(valor*100)/100);
    }
}
